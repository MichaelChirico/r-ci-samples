
# destination: website

# template:
#   params:
#     bootswatch: cosmo

url: https://keras.posit.co

template:
  bootstrap: 5
  bslib:
    primary: "#bf281b"
    navbar-light-color: "white"
    navbar-light-brand-color: "white"
    navbar-light-brand-hover-color: "white"
    code_font: {google: {family: "Fira Mono", wght: "400;600;700"}}
    # https://fonts.google.com/?classification=Monospace&stylecount=5

navbar:
  title: "Keras for R"
  bg: primary
  type: inverse
  left:
    - text: "Getting Started"
      href: articles/getting_started.html

    # - text: "Getting Started"
    #   menu:
    #     - text: "Introduction to Keras for engineers"
    #       href: articles/intro_to_keras_for_engineers.html
    #     - text: "Tutorials"
    #     - text: "Getting Started"
    #       href: articles/getting_started.html
    #     - text: "Basic Classification"
    #       href: articles/tutorial_basic_classification.html
    #     - text: "Text Classification"
    #       href: articles/tutorial_basic_text_classification.html
    #     - text: "Basic Regression"
    #       href: articles/tutorial_basic_regression.html
    #     - text: "Overfitting and Underfitting"
    #       href: articles/tutorial_overfit_underfit.html
    #     - text: "Save and Restore Models"
    #       href: articles/tutorial_save_and_restore.html

    - text: "Guides"
      menu:
        - text: "Model definition"

        - text: "Functional API"
          href: articles/functional_api.html

        - text: "Sequential Model"
          href: articles/sequential_model.html

        - text: "Extending and customizing"

        - text: "Training & evaluation with the built-in methods"
          href: articles/training_with_built_in_methods.html

        - text: "Writing your own callbacks"
          href: articles/writing_your_own_callbacks.html

        - text: "Making new layers and models via subclassing"
          href: articles/making_new_layers_and_models_via_subclassing.html

        - text: "Writing a training loop from scratch in TensorFlow"
          href: articles/writing_a_custom_training_loop_in_tensorflow.html

        - text: "Other topics"

        - text: "Transfer learning and fine tuning"
          href: articles/transfer_learning.html

        - text: "Distributed training with TensorFlow"
          href: articles/distributed_training_with_tensorflow.html

    - text: Examples
      href: articles/examples/index.html

    - text: "Reference"
      href: reference/index.html

    - text: "News"
      href: news/index.html

reference:
  - title: "Models"

  - subtitle: "Create Models"
  - contents:
    - keras_model_sequential
    - keras_model
    - keras_input
    - clone_model
    - Model

  - subtitle: "Train Models"
  - contents:
    - compile.keras.src.models.model.Model
    - fit.keras.src.models.model.Model
    - plot.keras_training_history
    - predict.keras.src.models.model.Model
    - evaluate.keras.src.models.model.Model
    - train_on_batch
    - predict_on_batch
    - test_on_batch
    - freeze_weights

  - subtitle: "Inspect and Modify Models"
  - contents:
    - summary.keras.src.models.model.Model
    - plot.keras.src.models.model.Model
    - get_config
    - get_weights
    - get_layer
    - count_params
    - pop_layer

  - subtitle: "Save and Load Models"
  - contents:
    - save_model
    - load_model
    - save_model_weights
    - load_model_weights
    - save_model_config
    - load_model_config
    - export_savedmodel.keras.src.models.model.Model
    - layer_tfsm
    - register_keras_serializable


  - title: "Layers"

  - subtitle: "Core Layers"
  - contents:
    - has_concept("core layers")

  - subtitle: "Reshaping Layers"
  - contents:
    - has_concept("reshaping layers")

  - subtitle: "Convolutional Layers"
  - contents:
    - has_concept("convolutional layers")

  - subtitle: "Pooling Layers"
  - contents:
    - has_concept("pooling layers")

  - subtitle: "Activation Layers"
  - contents:
    - has_concept("activation layers")
    # - starts_with("layer_activation")

  - subtitle: "Recurrent Layers"
  - contents:
    - has_concept("rnn layers")
    - reset_state
    # - has_concept("conv rnn layers")
    # - has_concept("recurrent layers")

  - subtitle: "Attention Layers"
  - contents:
    - has_concept("attention layers")

  - subtitle: "Normalization Layers"
    contents:
    - has_concept("normalization layers")

  - subtitle: "Regularization Layers"
  - contents:
    - has_concept("regularization layers")
    # - has_concept("spatial regularization layers")
    # - has_concept("dropout spatial regularization layers")

  - subtitle: "Merging Layers"
  - contents:
    - has_concept("merging layers")

  - subtitle: "Preprocessing Layers"
  - contents:
    - has_concept("preprocessing layers")
    - adapt
    # - has_concept("random preprocessing layers")

  - subtitle: "Compatability Layers"
  - contents:
    - layer_tfsm
    - layer_torch_module_wrapper

  - subtitle: "Custom Layers"
  - contents:
    - layer_lambda
    - Layer
    # - create_layer_wrapper
    # - create_layer

  - subtitle: "Layer Methods"
  - contents:
    - get_config
    - get_weights
    - count_params
    - reset_state


  - title: "Callbacks"
  - contents:
    - callback_model_checkpoint
    - callback_backup_and_restore
    - callback_early_stopping
    - callback_terminate_on_nan
    - callback_learning_rate_scheduler
    - callback_reduce_lr_on_plateau
    - callback_csv_logger
    - callback_tensorboard
    - callback_remote_monitor
    - callback_lambda
    - callback_swap_ema_weights
    - Callback


  - title: "Operations"
    desc: >
      Functions that are safe to call with both symbolic and eager tensor.

  - subtitle: Core Operations
  - contents:
    - has_concept("core ops")

  - subtitle: Math Operations
  - contents:
    - has_concept("math ops")

  - subtitle: General Tensor Operations
  - contents:
    - has_concept("numpy ops")

  - subtitle: "Neural Network Operations"
  - contents:
    - has_concept("nn ops")

  - subtitle: "Image Operations"
  - contents:
    - has_concept("image ops")
    - starts_with("k_")

  - title: "Losses"
  - contents:
    - starts_with("loss_")
    - Loss

  - title: "Metrics"
  - contents:
    - starts_with("metric_")
    - custom_metric
    - reset_state
    - Metric


  - title: "Data Loading"
    desc: >
      Keras data loading utilities help you quickly go from raw data to a TF `Dataset` object
      that can be used to efficiently train a model. These loading utilites can be
      combined with preprocessing layers to futher transform your input dataset before training.

  - contents:
    - image_dataset_from_directory
    - text_dataset_from_directory
    - audio_dataset_from_directory
    - timeseries_dataset_from_array


  - title: "Preprocessing"
  - contents:
    - layer_feature_space
    - adapt

  - subtitle: Numerical Features Preprocessing Layers
  - contents:
    - layer_normalization
    - layer_discretization

  - subtitle: Categorical Features Preprocessing Layers
  - contents:
    - layer_category_encoding
    - layer_hashing
    - layer_hashed_crossing
    - layer_string_lookup
    - layer_integer_lookup

  - subtitle: "Text Preprocessing Layers"
  - contents:
    - layer_text_vectorization

  - subtitle: "Sequence Preprocessing"
  - contents:
      - timeseries_dataset_from_array
      - pad_sequences

  - subtitle: Image Preprocessing Layers
  - contents:
    - layer_resizing
    - layer_rescaling
    - layer_center_crop

  - title: "Image Preprocessing"
  - contents:
    - starts_with("image_")
    - starts_with("op_image_")

  - subtitle: Image augmentation Layers
  - contents:
    - layer_random_crop
    - layer_random_flip
    - layer_random_translation
    - layer_random_rotation
    - layer_random_zoom
    - layer_random_contrast
    - layer_random_brightness

  - subtitle: "Application Preprocessing"
  - contents:
    - application_preprocess_inputs

  - title: "Optimizers"
    contents:
    - has_concept("optimizers")

  - title: "Learning Rate Schedules"
    contents:
    - starts_with("learning_rate_schedule_")
    - LearningRateSchedule


  - title: "Initializers"
  - contents:
      - has_concept("initializers")

  - title: "Constraints"
  - contents:
    # - has_concept("constraint")
    - has_concept("constraints")
    - Constraint

  - title: "Regularizers"
  - contents:
    - starts_with("regularizer")

  - title: "Activations"
  - contents:
    - starts_with("activation")
    - activation_relu


  - title: "Random Tensor Generators"
  - contents:

    - random_uniform
    - random_normal
    - random_truncated_normal
    - random_gamma
    - random_categorical
    - random_integer
    - random_dropout
    - random_shuffle
    - random_seed_generator


  - title: "Builtin small datasets"
  - contents:
    - starts_with("dataset_")


  - title: "Configuration"
  - contents:
    - starts_with("config_")

  - title: "Utils"
  - contents:
    - install_keras
    - use_backend
    - shape
    - set_random_seed
    - clear_session
    # - is_keras_available
    - get_source_inputs
    - keras

  - subtitle: Numerical Utils
  - contents:
    - normalize
    - to_categorical

  - subtitle: Data Utils
  - contents:
    - zip_lists
    - get_file
    - split_dataset
    - pack_x_y_sample_weight
    - unpack_x_y_sample_weight

  - subtitle: "Serialization Utils"
  - contents:
    - register_keras_serializable
    - get_custom_objects
    - get_registered_name
    - get_registered_object
    - serialize_keras_object
    - deserialize_keras_object
    - with_custom_object_scope
    - config_enable_unsafe_deserialization



      # - has_concept("utils")


      # - plot.keras_training_history
      # - plot.keras.src.models.model.Model
      # - use_session_with_seed
      # - hdf5_matrix
      # - keras_array





  # - title: "Misc other layers"
  #   contents:
  #     - starts_with("layer_")

  - title: "Base Keras Classes"
    desc: >
      Define custom object by subclassing base Keras classes.
  - contents:
    - Layer
    - Loss
    - Metric
    - Callback
    - Constraint
    - Model
    - LearningRateSchedule
    - active_property


  - title: "Applications"

  - subtitle: "Application utilities"
  - contents:
    - application_preprocess_inputs

  - subtitle: "ConvNeXt Applications"
    contents: [starts_with("application_convnext")]

  - subtitle: "Densenet Applications"
    contents: [starts_with("application_densenet")]

  - subtitle: "EfficientNet Applications"
    contents: [starts_with("application_efficientnet")]

  - subtitle: "Inception Applications"
    contents: [starts_with("application_inception")]

  - subtitle: "MobileNet Applications"
    contents: [starts_with("application_mobilenet")]

  - subtitle: "NASNet Applications"
    contents: [starts_with("application_nasnet")]

  - subtitle: "ResNet Applications"
    contents: [starts_with("application_resnet")]

  - subtitle: "VGG Applications"
    contents: [starts_with("application_vgg")]

  - subtitle: "Xception Applications"
    contents: [starts_with("application_xception")]



  # - title: "Deprecated"
  #   contents:
  #     - keras-package
      # - KerasWrapper
      # - create_wrapper
      # - loss_cosine_proximity
      # - layer_cudnn_gru
      # - layer_cudnn_lstm
      # - layer_dense_features


      # - adapt

#
#   - title: "Noise Layers"
#     contents:
#       - layer_gaussian_noise
#       - layer_gaussian_dropout
#       - layer_alpha_dropout
#
#
#   - title: "Image Preprocessing Layers"
#     contents:
#       - layer_resizing
#       - layer_rescaling
#       - layer_center_crop
#
#   - title: "Image Augmentation Layers"
#     contents:
#       -  layer_random_contrast
#       -  layer_random_crop
#       -  layer_random_flip
#       -  layer_random_height
#       -  layer_random_rotation
#       -  layer_random_translation
#       -  layer_random_width
#       -  layer_random_zoom
#
#   - title: "Categorical Features Preprocessing"
#     contents:
#       -  layer_category_encoding
#       -  layer_hashing
#       -  layer_integer_lookup
#       -  layer_string_lookup
#
#   - title: "Numerical Features Preprocessing"
#     contents:
#       -  layer_normalization
#       -  layer_discretization
#
#   - title: "Attention Layers"
#     contents:
#       - layer_attention
#       - layer_multi_head_attention
#       - layer_additive_attention
#
#   - title: "Layer Wrappers"
#     contents:
#       - time_distributed
#       - bidirectional

  # - subtitle: "Other Layers"
  #   contents:
  #     - starts_with("layer_")


      # - has_concept("ops")
      # - has_concept("metrics")
      # - has_concept("utils")
      # - has_concept("losses")
      # - has_concept("activations")
      # - has_concept("random initializers")
      # - has_concept("confusion metrics")
      # - has_concept("regression metrics")
      # - has_concept("backend")
      # - has_concept("config backend")
      # - has_concept("schedules optimizers")
      # - has_concept("schedule rate learning schedules optimizers")
      # - has_concept("rate learning schedules optimizers")
      # - has_concept("learning schedules optimizers")
      # - has_concept("image utils")
      # - has_concept("probabilistic metrics")
      # - has_concept("iou metrics")
      # - has_concept("accuracy metrics")
      # - has_concept("saving")
      # - has_concept("regularizers")
      # - has_concept("constant initializers")
      # - has_concept("traceback utils")
      # - has_concept("registration object saving")
      # - has_concept("reduction metrics")
      # - has_concept("object saving")
      # - has_concept("io utils")
      # - has_concept("hinge metrics")
