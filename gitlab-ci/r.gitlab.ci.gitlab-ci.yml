stages:
  - test
  - pages

test-linux:
  stage: test
  tags:
  - linux
  image: registry.gitlab.com/jangorecki/dockerfiles/r-base-dev
  before_script:
  - echo "Revision:" $CI_BUILD_REF >> ./DESCRIPTION
  script:
  - R CMD build .
  - R CMD check $(ls -1t *.tar.gz | head -n 1) --as-cran --no-manual
  - mkdir -p bus/src/contrib
  - mv $(ls -1t *.tar.gz | head -n 1) bus/src/contrib
  - Rscript -e 'tools::write_PACKAGES(contrib.url("bus"), fields="Revision", addFiles=TRUE)'
  artifacts:
    expire_in: 4 weeks
    when: always
    paths:
    - r.gitlab.ci.Rcheck
    - bus

test-windows:
  stage: test
  tags:
  - windows
  before_script:
  - curl.exe -s -o ../R-win.exe https://cran.r-project.org/bin/windows/base/R-4.0.0-win.exe
  - Start-Process -FilePath ..\R-win.exe -ArgumentList "/VERYSILENT /DIR=C:\R" -NoNewWindow -Wait
  - curl.exe -s -o ../rtools.exe https://cran.r-project.org/bin/windows/Rtools/rtools40-x86_64.exe
  - Start-Process -FilePath ..\rtools.exe -ArgumentList "/VERYSILENT /DIR=C:\rtools40" -NoNewWindow -Wait
  - $ENV:PATH = "C:\R\bin;C:\rtools40\usr\bin;$ENV:PATH"
  - >-
      Add-Content DESCRIPTION "Revision: $ENV:CI_BUILD_REF"
  script:
  - R.exe CMD build .
  - R.exe CMD check $(ls.exe -1t *.tar.gz | head -n 1) --as-cran --no-manual
  - R.exe CMD INSTALL $(ls.exe -1t *.tar.gz | head -n 1) --build
  - mkdir.exe -p bus/bin/windows/contrib/4.0
  - mv.exe $(ls.exe -1t *.zip | head -n 1) bus/bin/windows/contrib/4.0
  - Rscript.exe -e "tools::write_PACKAGES(contrib.url('bus', type='win.binary'), type='win.binary', fields='Revision', addFiles=TRUE)"
  artifacts:
    expire_in: 4 weeks
    when: always
    paths:
    - r.gitlab.ci.Rcheck
    - bus

pages:
  stage: pages
  only:
  - master
  tags:
  - linux
  image: ubuntu
  dependencies:
  - test-linux
  - test-windows
  script:
  - mkdir public
  - mv bus/* public
  artifacts:
    expire_in: 4 weeks
    paths:
    - public
