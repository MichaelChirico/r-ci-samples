name: Build wheel

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Build UI
        working-directory: mlflow/server/js
        env:
          # Prevent warnings (emitted from react-pdf) from being treated as errors
          # https://github.com/wojtekmaj/react-pdf/issues/280
          CI: false
        run: |
          npm install
          npm run build

      - name: Build wheel
        id: build-wheel
        run: |
          pip install wheel
          python setup.py bdist_wheel

          # set outputs
          wheel_path=$(find dist -type f)
          wheel_name=$(basename $wheel_path)
          wheel_size=$(stat -c %s $wheel_path)
          echo "::set-output name=wheel-path::${wheel_path}"
          echo "::set-output name=wheel-name::${wheel_name}"
          echo "::set-output name=wheel-size::${wheel_size}"

      - name: Verify wheel can be installed
        run: |
          pip install ${{ steps.build-wheel.outputs.wheel-path }}

      # Anyone with read access can download the uploaded wheel on GitHub.
      - name: Store wheel
        uses: actions/upload-artifact@v2
        if: github.event_name == 'push'
        with:
          name: ${{ steps.build-wheel.outputs.wheel-name }}
          path: ${{ steps.build-wheel.outputs.wheel-path }}

      - name: Remove old wheels
        uses: actions/github-script@v3
        if: github.event_name == 'push'
        env:
          WHEEL_SIZE: ${{ steps.build-wheel.outputs.wheel-size }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;

            // For some reason, the newly-uploaded wheel in the previous step is not included.
            const artifactsResp = await github.actions.listArtifactsForRepo({
              owner,
              repo,
            });
            const wheels = artifactsResp.data.artifacts.filter(({ name }) => name.endsWith(".whl"));

            // The storage usage limit for a free github account is up to 500 MB. See the page below for details:
            // https://docs.github.com/en/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-github-actions
            MAX_SIZE_IN_BYTES = 300_000_000; // 300 MB

            let index = 0;
            let sum = parseInt(process.env.WHEEL_SIZE);  // include the newly-uploaded wheel
            for (const [idx, { size_in_bytes }] of wheels.entries()) {
              index = idx;
              sum += size_in_bytes;
              if (sum > MAX_SIZE_IN_BYTES) {
                break;
              }
            }

            if (sum <= MAX_SIZE_IN_BYTES) {
              return;
            }

            // Delete old wheels
            const promises = wheels.slice(index).map(({ id: artifact_id }) =>
              github.actions.deleteArtifact({
                owner,
                repo,
                artifact_id,
              })
            );
            Promise.all(promises).then(data => console.log(data));
