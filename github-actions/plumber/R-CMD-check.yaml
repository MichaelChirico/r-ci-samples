on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 0 1,11,21 * *' # every 10 days (GHA cache invalidates after 7)

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'devel'}
          - {os: macOS-latest,   r: 'release'}
          - {os: macOS-latest,   r: 'oldrel'}

          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          # - {os: windows-latest, r: 'oldrel'} # do not test due to binaries not being created

          # check a lot of ubuntu combinations as that's where plumber is hosted
          - {os: ubuntu-18.04,   r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04,   r: 'oldrel',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04,   r: '3.5',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04,   r: '3.4',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

          # would use RSPM for ubuntu 16, but sodium has issues finding libsodium
          - {os: ubuntu-16.04,   r: 'release'}
          - {os: ubuntu-16.04,   r: 'oldrel'}
          - {os: ubuntu-16.04,   r: '3.5'}
          - {os: ubuntu-16.04,   r: '3.4'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: r-lib/actions/setup-r@master
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install pak and query dependencies
        shell: Rscript {0}
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps_tree("local::.", dependencies = TRUE), ".github/r-depends.rds")
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          pak::local_system_requirements(execute = TRUE)

      # Install Cairo system dependencies
      # used for svg testing
      - name: Mac systemdeps
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz
          brew install cairo

      - name: macOS oldrel Rcpp
        if: runner.os == 'macOS' && matrix.config.r == 'oldrel'
        shell: Rscript {0}
        run: |
          install.packages("Rcpp", type = "source")

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rcmdcheck")
          pak::pkg_install("sessioninfo")

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check
