on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6', sheets_auth: GOOGLESHEETS4_NOAUTH, error_on: 'warning'}
        - { os: macOS-latest, r: '3.6', sheets_auth: GOOGLESHEETS4_PASSWORD, error_on: 'warning'}
        - { os: macOS-latest, r: 'devel', sheets_auth: GOOGLESHEETS4_NOAUTH, error_on: 'warning'}
        - { os: ubuntu-16.04, r: '3.2', sheets_auth: GOOGLESHEETS4_NOAUTH, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", error_on: 'error'}
        - { os: ubuntu-16.04, r: '3.3', sheets_auth: GOOGLESHEETS4_NOAUTH, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", error_on: 'warning'}
        - { os: ubuntu-16.04, r: '3.4', sheets_auth: GOOGLESHEETS4_NOAUTH, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", error_on: 'warning'}
        - { os: ubuntu-16.04, r: '3.5', sheets_auth: GOOGLESHEETS4_NOAUTH, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", error_on: 'warning'}
        - { os: ubuntu-16.04, r: '3.6', sheets_auth: GOOGLESHEETS4_NOAUTH, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", error_on: 'warning'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GOOGLESHEETS4_PASSWORD: ${{ secrets[matrix.config.sheets_auth] }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: Rscript -e "install.packages('remotes')" -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install linux system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install macOS system dependencies
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'devel'
        run: brew install libsodium

      - name: Install dependencies
        run: Rscript -e "library(remotes)" -e "update(readRDS('depends.Rds'))" -e "remotes::install_cran('rcmdcheck')" -e "remotes::install_cran('tidyverse')" -e "remotes::install_github('hadley/emo')"

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--ignore-vignettes', '--no-examples'), build_args = '--no-build-vignettes', error_on = '${{ matrix.config.error_on }}', check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Reveal testthat details
        run: find . -name testthat.Rout -exec cat '{}' ';'

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: |
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
