on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6', gs4_auth: GOOGLESHEETS4_NOAUTH}
          - {os: macOS-latest, r: '3.6', gs4_auth: GOOGLESHEETS4_PASSWORD}
          - {os: macOS-latest, r: 'devel', gs4_auth: GOOGLESHEETS4_NOAUTH}
          #- {os: ubuntu-16.04, r: '3.2', gs4_auth: GOOGLESHEETS4_NOAUTH, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.3', gs4_auth: GOOGLESHEETS4_NOAUTH, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.4', gs4_auth: GOOGLESHEETS4_NOAUTH, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.5', gs4_auth: GOOGLESHEETS4_NOAUTH, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.6', gs4_auth: GOOGLESHEETS4_NOAUTH, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GOOGLESHEETS4_PASSWORD: ${{ secrets[matrix.config.gs4_auth] }}

    steps:
      - uses: actions/checkout@v2

      - name: Reveal env vars
        run: |
          echo GITHUB_WORKFLOW   = $GITHUB_WORKFLOW
          echo HOME              = $HOME
          echo GITHUB_ACTION     = $GITHUB_ACTION
          echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
          echo GITHUB_ACTOR      = $GITHUB_ACTOR
          echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
          echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
          echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
          echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
          echo GITHUB_SHA        = $GITHUB_SHA
          echo GITHUB_REF        = $GITHUB_REF

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-4-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-4-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install macOS dependencies
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'devel'
        # the xml2 thing is a hack due to
        # https://github.com/r-lib/xml2/pull/297
        # this entire step can go away once that's released on CRAN
        # xml2 is necessary to install spelling
        run: |
          Rscript -e "remotes::install_github('r-lib/xml2')"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("tidyverse")
          remotes::install_github("hadley/emo")
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--ignore-vignettes", "--no-examples"), error_on = "warning", build_args = "--no-build-vignettes", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Reveal testthat details
        run: find . -name testthat.Rout -exec cat '{}' ';'
