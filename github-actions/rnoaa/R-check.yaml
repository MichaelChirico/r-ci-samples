on: [push, pull_request]

name: R-check

jobs:
  R--check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'release', args: "--no-manual"}
        - { os: macOS-latest, r: 'release', args: "--no-manual"}
        - { os: macOS-latest, r: 'devel', args: "--no-manual"}
        - { os: ubuntu-latest, r: 'release', args: "--no-manual"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.rspm }}
      NOAA_KEY: ${{secrets.NOAA_KEY}}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2
        if: contains(matrix.config.args, 'no-manual') == false

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: install macOS system dependencies
        if: runner.os == 'macOS'
        continue-on-error: true
        run: |
          brew install pkg-config udunits proj geos gdal netcdf

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ppa
          sudo apt-get -y update
          sudo apt-get install -y --no-install-recommends \
            libudunits2-dev \
            libproj-dev \
            libgeos-dev \
            libgdal-dev \
            netcdf-bin

      - name: Install dependencies
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "remotes::install_cran(c('rcmdcheck', 'rgdal', 'ncdf4', 'taxize', 'leaflet', 'purrr', 'ggmap', 'ropenaq', 'covr'))"

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '${{ matrix.config.args }}'), error_on = 'warning', check_dir = 'check')"

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-16.04' && matrix.config.r == 'release'
        run: |
          Rscript -e 'remotes::install_github("r-lib/covr@gh-actions")'
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'

